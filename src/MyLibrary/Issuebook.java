/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MyLibrary;

import java.awt.event.KeyEvent;
import java.sql.ResultSetMetaData;
   import java.sql.Connection;
    import java.sql.PreparedStatement;
    import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
//import com.sun.jdi.connect.spi.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rahul Kundu
 */
public class Issuebook extends javax.swing.JFrame {

    /**
     * Creates new form Category
     */
    public Issuebook() {
        initComponents();
            //calling database connection constructor
            connect();
            book();
            Issuebookload();
            
    }
    
    
    
    
    
    
        //connection to database
        Connection con;
        PreparedStatement pst; //will be used to load SQL queries
        ResultSet rs;
        
        public void connect()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Library","root","");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        //connection to database is complete
        
        public class BookItem
        {
            int id;
            String name;
            public BookItem(int id,String name)
            {
                this.id=id;
                this.name=name;
            }
            public String toString()
            {
            return name;
            }
        }
        
        
        
        public void book()
        {
        try {
            pst=con.prepareStatement("select * from book");  
            rs=pst.executeQuery();
            
            txtbook.removeAllItems();
            
            while(rs.next())
            {
            txtbook.addItem(new BookItem(rs.getInt(1),rs.getString(2))); 
            
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        }
        
        
        
        
        
        
        
        
        //fetching data from database to JTable

    /**
     *
     */
        public void Issuebookload()
        {
            int c;
        try {
            pst=con.prepareStatement("select i.id,m.id as mid,m.member_name,b.Book_Name,i.issuedate,i.returndate from issuebook i,member m,book b where i.member_id=m.id and i.book_id=b.ID");//we cant say "select * from book" as in book table there are ids in places of category,author etc
            rs=pst.executeQuery();              //here member_id(foreign key) is the column name of issuebook table and id(primary key) is the column name of member table
            ResultSetMetaData rsd=rs.getMetaData();//here book_id(foreign key) is the column name of issuebook table and ID(primary key) is the column name of book table
            c=rsd.getColumnCount();
            
            DefaultTableModel d=(DefaultTableModel)jTable1.getModel();//jTable1 is the name of the table variable
            d.setRowCount(0);
            
            while(rs.next())
            {
            Vector v2=new Vector();
                for(int i=1;i<=c;i++)
                {
                v2.add(rs.getString("id"));// id of issuebook table
                v2.add(rs.getString("mid")); // mid i.e id of member table
                v2.add(rs.getString("member_name"));// these will be names of the columns of the corresponding database table,not of issuebook Table
                v2.add(rs.getString("Book_Name"));
                v2.add(rs.getString("issuedate"));
                v2.add(rs.getString("returndate"));
                }
            d.addRow(v2);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
        
        
        
        }
        
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtbook = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtmember = new javax.swing.JTextField();
        txtissue = new com.toedter.calendar.JDateChooser();
        txtreturn = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel1.setText("Issue Book");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Member Id :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Member Name :");

        txtid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Member ID", "Member Name", "Book", "Issue Date", "Return Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("Remove");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Book :");

        txtbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbookActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Issue Date :");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Return Date :");

        txtmember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmemberActionPerformed(evt);
            }
        });

        jLabel4.setText("Put member id and press enter to auto fill");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtbook, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtid)
                                    .addComponent(txtmember)
                                    .addComponent(txtissue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtreturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(102, 102, 102)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton2)
                                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 190, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 941, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmember, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbook, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtissue, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(29, 29, 29)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtreturn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(91, 91, 91)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(231, 231, 231))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
            //action of Add button-sending Issuebook data to sql issuebook table
            String mid=txtid.getText();
            BookItem bitem = (BookItem) txtbook.getSelectedItem();
            SimpleDateFormat da = new SimpleDateFormat("yyyy-MM-dd");
            String issuedate=da.format(txtissue.getDate());
            SimpleDateFormat daa = new SimpleDateFormat("yyyy-MM-dd");
            String returndate=daa.format(txtreturn.getDate());
        try {
            pst = con.prepareStatement("insert into issuebook(member_id,book_id,issuedate,returndate)values(?,?,?,?)"); //1st one is table name of sql and inside bracket these are column names
            pst.setString(1, mid);
            pst.setInt(2,bitem.id);//as we want to put book id on jtable
            pst.setString(3, issuedate);
            pst.setString(4, returndate);
            
            int k = pst.executeUpdate();
            if(k==1)
            {
            JOptionPane.showMessageDialog(this, "Book issued successfully..");
            txtid.setText("");//to clear the text box
            txtbook.setSelectedIndex(-1);
            txtmember.setText("");
            txtid.requestFocus();//to bring the cursor on Author name box
            Issuebookload();//will show the current input on jtable
            }
            else
            {
            JOptionPane.showMessageDialog(this, "Error in Book issue!!");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        }
//            }
//            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
            //if we click on any data on the jtable then it will appear on box and we will be able to edit the data
            
            
            DefaultTableModel d1=(DefaultTableModel)jTable1.getModel();
            int selectIndex=jTable1.getSelectedRow(); //row no of the selected data from the jtable is being fetched
            //JOptionPane.showMessageDialog(this, d1.getValueAt(selectIndex,2).toString());
            int id=Integer.parseInt(d1.getValueAt(selectIndex,0).toString());
            txtid.setText(d1.getValueAt(selectIndex,1).toString());
            txtmember.setText(d1.getValueAt(selectIndex,2).toString());
            txtbook.setSelectedItem(d1.getValueAt(selectIndex,3).toString());
            
        try {
           Date da = new SimpleDateFormat("yyyy-MM-dd").parse((String)d1.getValueAt(selectIndex,4));
           txtissue.setDate(da);
           Date daa = new SimpleDateFormat("yyyy-MM-dd").parse((String)d1.getValueAt(selectIndex,5));
           txtreturn.setDate(daa);
        } catch (ParseException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        }
           
         //  txtreturn.setText(d1.getValueAt(selectIndex,5).toString());
            
            
            
            jButton1.setEnabled(false);//this will inactivate the Add button when a row is being selected from from jtable
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
            //action of Update button-sending Updated Author details to sql and jtable
            
            DefaultTableModel d1=(DefaultTableModel)jTable1.getModel();
            int selectIndex=jTable1.getSelectedRow(); //row no of the selected data from the jtable is being fetched
            
            int id=Integer.parseInt(d1.getValueAt(selectIndex,0).toString());
            
        int mid =Integer.parseInt( txtid.getText());
        String mname = txtmember.getText();
        String bname = txtbook.getSelectedItem().toString();
        SimpleDateFormat da = new SimpleDateFormat("yyyy-MM-dd");
        String idate=da.format(txtissue.getDate());
        SimpleDateFormat daa = new SimpleDateFormat("yyyy-MM-dd");
        String rdate=daa.format(txtreturn.getDate());
        
        
        int bid=0;
        
        try {
            pst=con.prepareStatement("select ID from book where Book_Name=?");
            pst.setString(1,bname);
            rs=pst.executeQuery();
            while(rs.next())
            {
           bid=rs.getInt("ID");
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        try {
            pst = con.prepareStatement("update issuebook set member_id = ?, book_id= ?, issuedate= ?, returndate=? where id = ?"); //1st one is database table name,rest are column name
            pst.setInt(1, mid);
            pst.setInt(2,bid);
            pst.setString(3,idate);
            pst.setString(4, rdate);
            pst.setInt(5,id);
            int k = pst.executeUpdate();
            if(k==1)
            {
            JOptionPane.showMessageDialog(this, "Bookissue details Updated successfully..");
            txtid.setText("");
            txtmember.setText("");//to clear the box
            txtbook.setSelectedIndex(-1);
            txtissue.setDate(null);
            txtreturn.setDate(null);
            txtid.requestFocus();
            Issuebookload();//load the updated data on the jtable
            jButton1.setEnabled(true);//reenable the Add button
            }
            else
            {
            JOptionPane.showMessageDialog(this, "Error in Bookissue details Updatation!!");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
                //Remove button action
        DefaultTableModel d1=(DefaultTableModel)jTable1.getModel();
            int selectIndex=jTable1.getSelectedRow(); //row no of the selected data from the jtable is being fetched
            int id=Integer.parseInt(d1.getValueAt(selectIndex,0).toString());
            
        try {
            pst = con.prepareStatement("delete from issuebook where id = ?"); //here book is database table name
            pst.setInt(1, id);
            int k = pst.executeUpdate();
            if(k==1)
            {
            JOptionPane.showMessageDialog(this, "Bookissue details Removed successfully..");
            txtid.setText("");
            txtmember.setText("");//to clear the box
            txtbook.setSelectedIndex(-1);
            txtissue.setDate(null);
            txtreturn.setDate(null);
            txtid.requestFocus();
            Issuebookload();//load the updated data on the jtable
            jButton1.setEnabled(true);//reenable the Add button
            }
            else
            {
            JOptionPane.showMessageDialog(this, "error in Bookissue details Removal!!");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //Cancel the window
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbookActionPerformed

    private void txtmemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmemberActionPerformed

    private void txtidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidKeyPressed
        // TODO add your handling code here:
                //if we insert member id and press enter then member name will be displayed in membername textbox
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
         String mid=txtid.getText(); //to pick member id from member id text box
            try {
                pst=con.prepareStatement("select * from member where id=?");
                pst.setString(1,mid);
                rs=pst.executeQuery();
                    if(rs.next()==false)
                    {
                    JOptionPane.showMessageDialog(this,"Member ID not found");
                    }
                    else
                    {
                    String membername=rs.getString("member_name");//column name of member table of sql
                    txtmember.setText(membername.trim());//to fill the membername text box
                    }
            } catch (SQLException ex) {
                Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
               
        
        
        
        
        
        
        
        }
        
        
        
        
        
    }//GEN-LAST:event_txtidKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Issuebook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Issuebook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Issuebook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Issuebook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

            //sql connection checking
            String user="root";
            String password="";
            String url="jdbc:mysql://localhost:3306/Library";
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Issuebook.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connection cn = DriverManager.getConnection(url, user, password);
        if(cn!=null)
            System.out.print("connection to database is successful\n");
        else
            System.out.println("connection to database isn't successful\n");
            //sql connection checkig complete
            
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Issuebook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox txtbook;
    private javax.swing.JTextField txtid;
    private com.toedter.calendar.JDateChooser txtissue;
    private javax.swing.JTextField txtmember;
    private com.toedter.calendar.JDateChooser txtreturn;
    // End of variables declaration//GEN-END:variables
}
